{
    "name": "SDL Dev Container (Universal GPU Support)",
    "dockerFile": "Dockerfile.sdl",
    "workspaceMount": "source=${localWorkspaceFolder}/sdl_packages,target=/home/sdl/sdl_ws/src,type=bind,consistency=cached",
    "mounts": [
        "source=${localWorkspaceFolder}/supabase/.env,target=/home/sdl/sdl_ws/src/.env,type=bind"
    ],
    "workspaceFolder": "/home/sdl/sdl_ws",
    "build": {
        "args": {
            "WORKSPACE": "${containerWorkspaceFolder}"
        }
    },
    "postCreateCommand": "sudo chown -R sdl:sdl ~/sdl_ws",
    "remoteUser": "sdl",
    // Universal GPU support - works with both NVIDIA and AMD
    "runArgs": [
        "--volume=/tmp/.X11-unix:/tmp/.X11-unix:rw",  // GUI support
        "--env=DISPLAY",                                // X11 display
        "--ipc=host",                                   // shared memory for Gazebo
        "--device=/dev/dri",                           // GPU access for both NVIDIA and AMD
        "--group-add=video",                           // video group access
        "--cap-add=SYS_PTRACE",                        // allow debugging (future ROS dev)
        "--dns=8.8.8.8",                              // Add Google DNS
        "--dns=8.8.4.4"                               // Add backup DNS
    ],
    "initializeCommand": [
        "bash", "-c", 
        "if command -v nvidia-smi >/dev/null 2>&1; then echo 'NVIDIA GPU detected - consider using devcontainer.nvidia.json for optimal performance'; elif lspci | grep -i amd | grep -i vga >/dev/null; then echo 'AMD GPU detected - consider using devcontainer.amd.json for optimal performance'; else echo 'Generic GPU support enabled'; fi"
    ],
    "containerEnv": {
        "DISPLAY": "${localEnv:DISPLAY}",
        "WAYLAND_DISPLAY": "${localEnv:WAYLAND_DISPLAY}",
        "XDG_RUNTIME_DIR": "${localEnv:XDG_RUNTIME_DIR}",
        "PULSE_SERVER": "${localEnv:PULSE_SERVER}",
        "LIBGL_ALWAYS_SOFTWARE": "1",
        "GAZEBO_MASTER_URI": "http://localhost:11345"
    },
    // Set *default* container specific settings.json values on container create.
    "customizations": {
        "vscode": {
            "extensions": [
                "althack.ament-task-provider",
                "DotJoshJohnson.xml",
                "ms-azuretools.vscode-docker",
                "ms-iot.vscode-ros",
                "ms-python.python",
                "ms-vscode.cpptools",
                "redhat.vscode-yaml",
                "smilerobotics.urdf",
                "streetsidesoftware.code-spell-checker",
                "twxs.cmake",
                "yzhang.markdown-all-in-one",
                "zachflower.uncrustify",
                "vsliveshare.vsliveshare",
                "mutantdino.resourcemonitor"
            ]
        }
    }
}